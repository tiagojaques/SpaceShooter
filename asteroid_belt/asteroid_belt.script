function init(self)
	self.difficult = 100
	
	--[[
	self.factories_big = {
		'#aster_1_factory',
		'#aster_2_factory',
	}

	self.factories_medium = {
		'#aster_3_factory',
		'#aster_4_factory',
	}

	self.factories_small = {
		'#aster_5_factory',
		'#aster_6_factory',
	}
	]]--
	self.factories = {
		'#aster_1_factory',
		'#aster_2_factory',
		'#aster_3_factory',
		'#aster_4_factory',
		'#aster_5_factory',
		'#aster_6_factory',
	}
	timer.delay(30, true, function(self, handle, time_elapsed)
		if self.difficult > 40 then
			self.difficult = self.difficult - 5
		end
		print(time_elapsed..' | '..self.difficult)
		--timer.cancel(handle)
	end)
	
	
end


function update(self, dt)
	if math.random(0, self.difficult) == 0 then
		local scale = math.random(4,15) / 10
		local scale_vector = vmath.vector3(scale,scale, 1)

		local postition = vmath.vector3(math.random(100, 1180), 850, 1)
		local which_facory = math.random(1,2.99)
		factory.create(self.factories[which_facory], postition, nil, nil, scale_vector)
		--factory.create(url, [position], [rotation], [properties], [scale])
	end
	--[[
	if math.random(0, 350) == 0 then
		local scale = math.random(7,13) / 10
		local scale_vector = vmath.vector3(scale,scale, 1)

		local postition = vmath.vector3(math.random(100, 1180), 850, 1)
		local which_facory = math.random(1,2.99)
		factory.create(self.factories_medium[which_facory], postition, nil, nil, scale_vector)
	end

	if math.random(0, 500) == 0 then
		local scale = math.random(9,12) / 10
		local scale_vector = vmath.vector3(scale,scale, 1)

		local postition = vmath.vector3(math.random(100, 1180), 850, 1)
		local which_facory = math.random(1,2.99)
		factory.create(self.factories_small[which_facory], postition, nil, nil, scale_vector)
	end
	]]--
end